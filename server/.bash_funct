# Bash_Functions
# All general purpose .bashrc functions go here.
SyncRepo() 
{
    git fetch origin && git pull origin master
}

# Display the list of the available output colors on th terminal
DisplayOutputColors()
{
    # This program is free software. It comes without any warranty, to
    # the extent permitted by applicable law. You can redistribute it
    # and/or modify it under the terms of the Do What The Fuck You Want
    # To Public License, Version 2, as published by Sam Hocevar. See
    # http://sam.zoy.org/wtfpl/COPYING for more details.
     
    #Background
    for clbg in {40..47} {100..107} 49 ; do
        #Foreground
        for clfg in {30..37} {90..97} 39 ; do
            #Formatting
            for attr in 0 1 2 4 5 7 ; do
                #Print the result
                echo -en "\e[${attr};${clbg};${clfg}m ^[${attr};${clbg};${clfg}m \e[0m"
            done
            echo #Newline
        done
    done
}

## Add multiple files to git
GitAdd()
{
    if [ "$1" = "-f" ]; then
        git add $(find . | fzf -m);
    else
        git add "$1";
    fi
}

## copy and go to dir
cpg (){
  if [ -d "$2" ];then
    cp $1 $2 && cd $2
  else
    cp $1 $2
  fi
}

## move and go to dir
mvg ()
{
  if [ -d "$2" ];then
    mv $1 $2 && cd $2
  else
    mv $1 $2
  fi
}

## Handy Extract Program
function extract() 
{
    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2)   tar xvjf $1     ;;
            *.tar.gz)    tar xvzf $1     ;;
            *.bz2)       bunzip2 $1      ;;
            *.rar)       unrar x $1      ;;
            *.gz)        gunzip $1       ;;
            *.tar)       tar xvf $1      ;;
            *.tbz2)      tar xvjf $1     ;;
            *.tgz)       tar xvzf $1     ;;
            *.zip)       unzip $1        ;;
            *.Z)         uncompress $1   ;;
            *.7z)        7z x $1         ;;
            *)           echo "'$1' cannot be extracted via >extract<" ;;
        esac
    else
        echo "'$1' is not a valid file!"
    fi
}

# Creates an archive (*.tar.gz) from given directory.
function tarit() 
{ 
    tar cvzf "${1%%/}.tar.gz"  "${1%%/}/"; 
}

# Create a ZIP archive of a file or folder.
function zipit() 
{ 
    zip -r "${1%%/}.zip" "$1" ; 
}

# Get IP adress on ethernet
function my_ip() 
{
    MY_IP=$(/sbin/ifconfig wlp58s0 | awk '/inet/ { print $2 } ' | sed -e s/addr://)
    echo ${MY_IP:-"Not connected"}
}

# Get current host related info.
function ii()   
{
    echo -e "\nYou are logged on ${ca00}$HOST"
    echo -e "\n${Bo}${c0ff}Additionnal information:${Rst} " ; uname -a
    echo -e "\n${Bo}${c0ff}Users logged on:${Rst} " ; w -hs | cut -d " " -f1 | sort | uniq
    echo -e "\n${Bo}${c0ff}Current date :${Rst} " ; date
    echo -e "\n${Bo}${c0ff}Machine stats :${Rst} " ; uptime
    echo -e "\n${Bo}${c0ff}Memory stats :${Rst} " ; free
    echo -e "\n${Bo}${c0ff}Diskspace :${Rst} " ; df / $HOME
    echo -e "\n${Bo}${c0ff}Local IP Address :${Rst}" ; my_ip
    echo -e "\n${Bo}${c0ff}Open connections :${Rst} "; netstat -pan --inet;
    echo
}
